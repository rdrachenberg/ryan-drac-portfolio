{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/ryan-drac-port/client/src/components/DisplayAPI.js\";\nimport React from 'react';\nimport { Container, Row, Col } from 'mdbreact';\nimport '../App.css';\nimport API from '../utils/API';\nimport { List } from '../components/List';\nimport { ListItem } from '../components/ListItem';\nimport { Link } from 'react-router-dom';\nimport DeleteButton from './DeleteButton';\nimport UpdateButton from './UpdateButton';\nimport { ModalPage } from '../components/Modal';\nexport class DisplayAPI extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadUsers = () => {\n      API.getUsers().then(res => this.setState({\n        user: res.data,\n        name: \"\",\n        email: \"\",\n        subject: \"\",\n        message: \"\"\n      })).catch(err => console.log(err));\n    };\n\n    this.deleteUser = id => {\n      API.deleteUser(id).then(res => this.loadUsers()).catch(err => console.log(err));\n    };\n\n    this.updateUser = id => {\n      API.updateUser(id, {\n        name: this.state.name,\n        email: this.state.email,\n        subject: this.state.subject,\n        message: this.state.message\n      }).then(res => this.setState({\n        user: res.data,\n        toHide: false\n      })).then(res => this.loadUsers()).then(res => console.log('the Update button has been clicked')).catch(err => console.log(err));\n    };\n\n    this.findOneUser = id => {\n      API.getUser(id).then(res => this.setState({\n        user: res.data,\n        toHide: true\n      })).then(res => console.log(this.state.user)).catch(err => console.log(err));\n    };\n\n    this.onChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.name && this.state.email) {\n        API.saveUser({\n          name: this.state.name,\n          email: this.state.email,\n          subject: this.state.subject,\n          message: this.state.message\n        }).then(res => this.loadUsers()).catch(err => console.log(err));\n      }\n    };\n\n    this.state = {\n      toUpdate: false,\n      toHide: false,\n      toRefresh: false,\n      user: [],\n      name: '',\n      email: '',\n      subject: '',\n      message: ''\n    };\n  }\n\n  componentDidMount() {\n    this.loadUsers();\n  }\n\n  render() {\n    const {\n      user,\n      name,\n      email,\n      subject,\n      message\n    } = this.state;\n\n    if (this.state.toHide === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"11\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(List, {\n        className: \"list-container-one-return\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(ListItem, {\n        key: user._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/api-render\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.onSubmit.bind(this),\n        className: \"form-api\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"h4 text-center mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 45\n        }\n      }, \"Edit Record\"), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"name\",\n        className: \"grey-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 45\n        }\n      }, \"Edit name\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: this.state.user.name,\n        name: \"name\",\n        value: this.state.name,\n        onChange: this.onChange,\n        id: \"name\",\n        className: \"form-control\",\n        autoComplete: \"name\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"email\",\n        className: \"grey-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 45\n        }\n      }, \"Edit email\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"email\",\n        placeholder: this.state.user.email,\n        name: \"email\",\n        value: this.state.email,\n        onChange: this.onChange,\n        id: \"email\",\n        className: \"form-control\",\n        autoComplete: \"email\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"subject\",\n        className: \"grey-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 45\n        }\n      }, \"Edit Subject\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: this.state.user.subject,\n        name: \"subject\",\n        value: this.state.subject,\n        onChange: this.onChange,\n        id: \"subject\",\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"message\",\n        className: \"grey-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 45\n        }\n      }, \"Edit message\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        type: \"text\",\n        placeholder: this.state.user.message,\n        name: \"message\",\n        value: this.state.message,\n        onChange: this.onChange,\n        id: \"message\",\n        className: \"form-control\",\n        rows: \"3\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 45\n        }\n      })))), /*#__PURE__*/React.createElement(UpdateButton, {\n        key: user._id,\n        onClick: () => this.updateUser(user._id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 37\n        }\n      }))))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"crud-operations-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"h1 text-center mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, \" CRUD Operations \"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit.bind(this),\n      className: \"form-api\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"h2 text-center mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    }, \"Add a Record\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      className: \"grey-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 33\n      }\n    }, \"Your name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: name,\n      onChange: this.onChange,\n      id: \"name\",\n      className: \"form-control\",\n      autoComplete: \"name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      className: \"grey-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 33\n      }\n    }, \"Your email\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.onChange,\n      id: \"email\",\n      className: \"form-control\",\n      autoComplete: \"email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"subject\",\n      className: \"grey-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 33\n      }\n    }, \"Subject\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"subject\",\n      value: subject,\n      onChange: this.onChange,\n      id: \"subject\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"message\",\n      className: \"grey-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }\n    }, \"Your message\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      name: \"message\",\n      value: message,\n      onChange: this.onChange,\n      id: \"message\",\n      className: \"form-control\",\n      rows: \"3\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => this.loadUsers(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-elegant\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 41\n      }\n    }, \"Create Record\", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-paper-plane-o ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 104\n      }\n    }))))))), this.state.user.length ? /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"h2 text-center mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }, \" Click on record to update \"), this.state.user.reverse().map(user => /*#__PURE__*/React.createElement(ListItem, {\n      key: user.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => this.findOneUser(user._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 37\n      }\n    }, \"Name: \", user.name, \",\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 37\n      }\n    }, \"Email: \", user.email, \",\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 37\n      }\n    }, \"Subject: \", user.subject))), /*#__PURE__*/React.createElement(DeleteButton, {\n      onClick: () => this.deleteUser(user._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 33\n      }\n    })))) : /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      key: user._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/api-render\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-container-one-return\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"api-render\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 41\n      }\n    }, \"Name: \", this.state.user.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"api-render\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 41\n      }\n    }, \"Email: \", this.state.user.email), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"api-render\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 41\n      }\n    }, \"Subject: \", this.state.user.subject), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"api-render\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 41\n      }\n    }, \"Message: \", this.state.user.message), /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit.bind(this),\n      className: \"form-api\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"h4 text-center mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 45\n      }\n    }, \"Edit Record\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      className: \"grey-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 45\n      }\n    }, \"Edit name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: this.state.user.name,\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.onChange,\n      id: \"name\",\n      className: \"form-control\",\n      autoComplete: \"name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      className: \"grey-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 45\n      }\n    }, \"Edit email\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: this.state.user.email,\n      value: this.state.email,\n      onChange: this.onChange,\n      id: \"email\",\n      className: \"form-control\",\n      autoComplete: \"email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"subject\",\n      className: \"grey-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 45\n      }\n    }, \"Edit Subject\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"subject\",\n      placeholder: this.state.user.subject,\n      value: this.state.subject,\n      onChange: this.onChange,\n      id: \"subject\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"message\",\n      className: \"grey-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 45\n      }\n    }, \"Edit message\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      name: \"message\",\n      placeholder: this.state.user.message,\n      value: this.state.message,\n      onChange: this.onChange,\n      id: \"message\",\n      className: \"form-control\",\n      rows: \"3\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 45\n      }\n    }))))), /*#__PURE__*/React.createElement(UpdateButton, {\n      key: user._id,\n      onClick: () => this.updateUser(user._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 33\n      }\n    })))))), /*#__PURE__*/React.createElement(ModalPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n;\nexport default DisplayAPI;","map":{"version":3,"sources":["/Users/ryan/ryan-drac-port/client/src/components/DisplayAPI.js"],"names":["React","Container","Row","Col","API","List","ListItem","Link","DeleteButton","UpdateButton","ModalPage","DisplayAPI","Component","constructor","props","loadUsers","getUsers","then","res","setState","user","data","name","email","subject","message","catch","err","console","log","deleteUser","id","updateUser","state","toHide","findOneUser","getUser","onChange","e","value","target","onSubmit","preventDefault","saveUser","toUpdate","toRefresh","componentDidMount","render","_id","bind","length","reverse","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Container, Row, Col } from 'mdbreact';\nimport '../App.css';\nimport API from '../utils/API';\nimport {List} from '../components/List';\nimport {ListItem} from '../components/ListItem';\nimport {Link} from 'react-router-dom';\nimport DeleteButton from './DeleteButton';\nimport UpdateButton from './UpdateButton';\nimport { ModalPage} from '../components/Modal';\n\n\nexport class DisplayAPI extends React.Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            toUpdate: false,\n            toHide: false,\n            toRefresh: false,\n            user:[],\n                name: '',\n                email: '',\n                subject: '',\n                message: '',\n\n        };\n    }\n        componentDidMount(){\n            this.loadUsers();\n        }\n\n        loadUsers = () => {\n            API.getUsers()\n            .then(res => \n                this.setState({ user: res.data, name: \"\", email: \"\", subject: \"\", message: \"\" }))\n                .catch((err => console.log(err)));\n        }\n\n        deleteUser = id => {\n            API.deleteUser(id)\n            .then(res => this.loadUsers())\n            .catch(err => console.log(err));\n        }\n\n        updateUser = (id) => {\n            API.updateUser(id, {\n                    name: this.state.name,\n                    email: this.state.email,\n                    subject: this.state.subject,\n                    message: this.state.message\n            })\n            .then(res => this.setState({ user: res.data, toHide: false}))\n            .then(res => this.loadUsers())\n            .then(res => console.log('the Update button has been clicked'))\n            .catch(err => console.log(err));\n            \n        }\n\n        findOneUser = id => {\n        API.getUser(id)\n        .then(res => this.setState({ user: res.data, toHide: true}))\n        .then(res => console.log(this.state.user))\n        .catch(err => console.log(err));\n        }\n\n        onChange = (e) => {\n            const {name, value} = e.target;\n            this.setState({\n                [name] : value\n            });\n        }\n\n        onSubmit = (e) => {\n            e.preventDefault();\n            if (this.state.name && this.state.email) {\n                API.saveUser({\n                    name: this.state.name,\n                    email: this.state.email,\n                    subject: this.state.subject,\n                    message: this.state.message\n                })\n                .then(res => this.loadUsers())\n                .catch(err => console.log(err));\n            }\n        };\n    render() {\n        const {user, name, email, subject, message} = this.state \n        if (this.state.toHide === true){\n            return( \n                <div>\n                    <Row>\n                        <Col md = \"11\" >\n                            <List className = \"list-container-one-return\" >\n                                <ListItem key={user._id}>\n                                    <Link to=\"/api-render\">\n                                        <Col md=\"10\">\n                                            <form onSubmit={this.onSubmit.bind(this)} className=\"form-api\">\n                                            <p className=\"h4 text-center mb-4\">Edit Record</p>\n                                            <label htmlFor=\"name\" className=\"grey-text\">Edit name</label>\n                                            <input type=\"text\" placeholder= {this.state.user.name} name=\"name\" value={this.state.name} onChange={this.onChange} id=\"name\" className=\"form-control\" autoComplete='name' required/>\n                                            <br/>\n                                            <label htmlFor=\"email\" className=\"grey-text\">Edit email</label>\n                                            <input type=\"email\" placeholder= {this.state.user.email} name=\"email\" value={this.state.email} onChange={this.onChange} id=\"email\" className=\"form-control\" autoComplete='email' required/>\n                                            <br/>\n                                            <label htmlFor=\"subject\" className=\"grey-text\">Edit Subject</label>\n                                            <input type=\"text\" placeholder= {this.state.user.subject} name=\"subject\" value={this.state.subject} onChange={this.onChange} id=\"subject\" className=\"form-control\"/>\n                                            <br/>\n                                            <label htmlFor=\"message\" className=\"grey-text\">Edit message</label>\n                                            <textarea type=\"text\" placeholder= {this.state.user.message} name=\"message\" value={this.state.message}  onChange={this.onChange} id=\"message\" className=\"form-control\" rows=\"3\" required></textarea>\n                                            <div className=\"text-center mt-4\">\n                                            </div>\n                                            </form>\n                                        </Col>\n                                    </Link>\n                                    <UpdateButton key={user._id} onClick={() => this.updateUser(user._id)} />\n                                </ListItem>\n                            </List>\n                        </Col>\n                    </Row>\n                </div>\n            )\n        } \n        return(\n            <div>\n                <Container>\n                    < Row className=\"crud-operations-title\">\n                        <Col md=\"4\"></Col>\n                        < Col md=\"4\" >\n                            < p className = \"h1 text-center mb-1\" > CRUD Operations </p>\n                        </Col>\n                    </Row >\n                    <Row>\n                        <Col md=\"6\">\n                            <div className=\"hidden\">\n                            <form onSubmit={this.onSubmit.bind(this)} className=\"form-api\">\n                                <p className=\"h2 text-center mb-2\">Add a Record</p>\n                                <label htmlFor=\"name\" className=\"grey-text\">Your name</label>\n                                <input type=\"text\" name=\"name\" value={name} onChange={this.onChange} id=\"name\" className=\"form-control\" autoComplete='name' required/>\n                                <br/>\n                                <label htmlFor=\"email\" className=\"grey-text\">Your email</label>\n                                <input type=\"email\" name=\"email\" value={email} onChange={this.onChange} id=\"email\" className=\"form-control\" autoComplete='email' required/>\n                                <br/>\n                                <label htmlFor=\"subject\" className=\"grey-text\">Subject</label>\n                                <input type=\"text\" name=\"subject\" value={subject} onChange={this.onChange} id=\"subject\" className=\"form-control\"/>\n                                <br/>\n                                <label htmlFor=\"message\" className=\"grey-text\">Your message</label>\n                                <textarea type=\"text\" name=\"message\" value={message}  onChange={this.onChange} id=\"message\" className=\"form-control\" rows=\"3\" required></textarea>\n                                <div className=\"text-center mt-4\">\n                                    <span onClick={()=> this.loadUsers()}>\n                                        <button className=\"btn btn-elegant\" type=\"submit\">Create Record<i className=\"fa fa-paper-plane-o ml-2\"></i></button>\n                                    </span>\n                                </div>\n                            </form>\n                            </div>\n                        </Col>\n                        \n                    {this.state.user.length ? (\n                    <List>\n                        < p className = \"h2 text-center mb-2\" > Click on record to update </p>\n                        {this.state.user.reverse().map(user => (\n                            <ListItem key={user.id}>\n                            <span onClick={() => this.findOneUser(user._id)}>\n                                <strong>\n                                    <div>\n                                        Name: {user.name},\n                                    </div>\n                                    < div >\n                                        Email: {user.email},\n                                    </ div>\n                                    <div>\n                                        Subject: {user.subject}\n                                    </div>\n                                </strong>\n                                </span>\n                                {/* </Link> */}\n                                <DeleteButton onClick={() => this.deleteUser(user._id)} />\n                            </ListItem>\n                        ))}\n                    </List>\n                    ) : (\n                    < Col md = \"12\" >\n                        <List>\n                            <ListItem key={user._id}>\n                                <Link to=\"/api-render\">\n                                    < div className = \"list-container-one-return\" >\n                                        < div className = \"api-render\">\n                                            Name: {this.state.user.name}\n                                        </div>\n                                        <div className = \"api-render\"> \n                                            Email: {this.state.user.email}\n                                        </div>\n                                        <div className = \"api-render\"> \n                                            Subject: {this.state.user.subject}\n                                        </div>\n                                        <div className = \"api-render\"> \n                                            Message: {this.state.user.message}\n                                        </div>\n                                        <Col md=\"12\">\n                                            <form onSubmit={this.onSubmit.bind(this)} className=\"form-api\">\n                                            <p className=\"h4 text-center mb-4\">Edit Record</p>\n                                            <label htmlFor=\"name\" className=\"grey-text\">Edit name</label>\n                                            <input type=\"text\" placeholder= {this.state.user.name} name=\"name\" value={this.state.name} onChange={this.onChange} id=\"name\" className=\"form-control\" autoComplete='name' required/>\n                                            <br/>\n                                            <label htmlFor=\"email\" className=\"grey-text\">Edit email</label>\n                                            <input type=\"email\" name=\"email\" placeholder= {this.state.user.email} value={this.state.email} onChange={this.onChange} id=\"email\" className=\"form-control\" autoComplete='email' required/>\n                                            <br/>\n                                            <label htmlFor=\"subject\" className=\"grey-text\">Edit Subject</label>\n                                            <input type=\"text\" name=\"subject\" placeholder= {this.state.user.subject} value={this.state.subject} onChange={this.onChange} id=\"subject\" className=\"form-control\"/>\n                                            <br/>\n                                            <label htmlFor=\"message\" className=\"grey-text\">Edit message</label>\n                                            <textarea type=\"text\" name=\"message\" placeholder= {this.state.user.message} value={this.state.message}  onChange={this.onChange} id=\"message\" className=\"form-control\" rows=\"3\" required></textarea>\n                                            <div className=\"text-center mt-4\">\n                                                {/* <button className=\"btn btn-elegant\" type=\"submit\">Post<i className=\"fa fa-paper-plane-o ml-2\"></i></button> */}\n                                            </div>\n                                            </form>\n                                        </Col>\n                                    </div>\n                                </Link>\n                                <UpdateButton key={user._id} onClick={() => this.updateUser(user._id)} />\n                            </ListItem>\n                        </List>\n                    </Col>\n                    )}\n                    </Row>\n                </Container>\n                < ModalPage />\n            </div>\n        );\n    }\n};\n\nexport default DisplayAPI;"]},"metadata":{},"sourceType":"module"}